#!/usr/bin/env ansible-playbook
---

- import_playbook: ansible_become_pass.yml

- name: Gets basic user data
  hosts: localhost
  gather_facts: False

  tasks:

    - set_fact:
        user_accounts: &user-accounts /ext/user-accounts
    - git:
        repo: git@github.com:Epiconcept-Paris/infra-data-user-accounts.git
        dest: *user-accounts
        key_file: |-
          {{ lookup('env', 'EPI_SSH_KEY_FILE') | default(omit) }}
      name: Gets private data

- name: Builds full user data
  hosts: localhost
  gather_facts: False

  tasks:

    - assert: { that: file is defined }

    - include_vars:
        file: ./{{ user_accounts }}/{{ file }}.yml
        name: group
      name: Includes {{ file }}

    - set_fact:
        group: |
          {% set combine = { 'by': { 'login': { item.login: item }, 'trigram': { item.trigram: item }}} %}
          {{ group | combine(combine, recursive=True) }}
      with_items: '{{ group.users }}'
      loop_control:
        label: '{{ item.trigram }}'
      name: Builds indexes

    - set_fact:
        group: |
          {% set combine = { 'lists': { item: group.users | map(attribute=item) | list }} %}
          {{ group | combine(combine, recursive=True) }}
      with_items: [ trigram, login ]
      name: Builds lists

- name: Adds one user
  hosts: all
  gather_facts: False
  tags: one

  vars:
    space: ' '
    group: '{{ hostvars.localhost.group }}'

  tasks:

    - assert: { that: id is defined }

    - set_fact: { user: '{{ group.by.trigram[id] }}' }
      name: Gets user data by trigram

    - user:
        name: '{{ user.login }}'
        comment: '{{ user.func ~ space ~ user.name ~ "<" ~ user.mail ~ ">" }}'
        password: '{{ user.password.md5 }}'
        update_password: |-
          {{ update_password | default('on_create') }}
        shell: /bin/bash
      name: Creates user
